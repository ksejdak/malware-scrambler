MACRO(GetSubdirectories result curdir)
    file(GLOB children RELATIVE ${curdir} ${curdir}/*)
    set(dirlist "")

    foreach(child ${children})
        if(IS_DIRECTORY ${curdir}/${child})
            set(dirlist ${dirlist} ${child})
        endif()
    endforeach()

    set(${result} ${dirlist})
endmacro()

macro(RegisterComponent)
    set(CURRENT_PATH ${CMAKE_CURRENT_SOURCE_DIR})
    get_filename_component(COMPONENT ${CURRENT_PATH} NAME)

    # each component will be as a separate library
    add_library(${COMPONENT} ${COMPONENT}.cpp)
    set_property(TARGET ${COMPONENT} PROPERTY FOLDER ${COMPONENT})
    message(STATUS "Creating component [${COMPONENT}]:")
    
    GetSubdirectories(SUBDIR_LIST ${CURRENT_PATH})
    foreach(MODULE ${SUBDIR_LIST})
        message(STATUS "  Adding module [${MODULE}]")
    
        add_subdirectory(${MODULE})
        set_property(TARGET ${MODULE} PROPERTY FOLDER ${COMPONENT})
        
        target_link_libraries(${COMPONENT} ${MODULE})
    endforeach()
endmacro()

macro(RegisterModule)
	set(CURRENT_PATH ${CMAKE_CURRENT_SOURCE_DIR})
	get_filename_component(MODULE ${CURRENT_PATH} NAME)
	get_filename_component(PARENT_DIR ${CURRENT_PATH} PATH)
	
	file(GLOB INC "*.h")
	add_library(${MODULE} ${SRC} ${INC})
endmacro()