from Utils.Logger       import Logger
from Utils.Settings     import SCAN_FILE_URL, GET_REPORT_URL, PUBLIC_API_KEY

import requests
import sys
import json
import urllib
import urllib2

class RequestHandler(object):

    def __init__(self):
        self.__log = Logger.getLogger()

    def scanFile(self, filePath):
        self.__log.info("Sending to SCAN in VirusTotal: [%s]", filePath)
        url = SCAN_FILE_URL

        try:
            file = open(filePath, "rb")
            requestFiles = {"file": file}
            requestValues = {"apikey": PUBLIC_API_KEY}

            return requests.post(url, requestValues, files = requestFiles).json()

        except IOError as exc:
            self.__log.error("File error: [%s]", exc)
            return None
        except:
            self.__log.error("Unexpected error: [%s -> %s]", sys.exc_info()[0], sys.exc_info()[1])
            return None

    def getScanReport(self, resource):
        self.__log.info("Getting REPORT from VirusTotal: [%s]", resource)
        url = GET_REPORT_URL

        try:
            parameters = {
                "resource" : resource,
                "apikey"  : PUBLIC_API_KEY
            }

            data = urllib.urlencode(parameters)
            request = urllib2.Request(url, data)
            response = urllib2.urlopen(request)
            return json.load(response)

        except ValueError:
            self.__log.error("Still waiting for report...")
            return None
        except:
            self.__log.error("Unexpected error: [%s -> %s]", sys.exc_info()[0], sys.exc_info()[1])
            return None