#ifndef MUTATIONENGINEMANAGER_H
#define MUTATIONENGINEMANAGER_H

#include "IMutationEngine.h"

#include <memory>
#include <map>
#include <boost\property_tree\ptree.hpp>

class MutationEngineManager
{
public:
    /// @brief Returns static instance of MutationEngineManager
    static MutationEngineManager& getInstance()
    {
        static MutationEngineManager instance;
        return instance;
    }

    /// @brief Creates mutation engine depending on name and engine tree
    /// @param [in] name        mutation engine name
    /// @param [in] engineTree  property tree describing mutation engine
    /// @return pointer to mutation engine
    std::shared_ptr<IMutationEngine> createMutationEngine(std::string name, const boost::property_tree::ptree& engineTree);

private:
    /// @brief Private constructor
    MutationEngineManager() {}
};

#endif