#ifndef MUTATIONPIPELINEFACTORY_H
#define MUTATIONPIPELINEFACTORY_H

#include "MutationPipeline.h"

#include <memory>
#include <boost\property_tree\ptree.hpp>
#include <boost\filesystem.hpp>

class MutationPipelineFactory
{
public:
    /// @brief Returns static instance of MutationPipelineFactory
    static MutationPipelineFactory& getInstance()
    {
        static MutationPipelineFactory instance;
        return instance;
    }

    /// @brief Creates initialized pipeline according to config file
    /// @param [in] configPath      path to config file
    /// @return pointer to mutation pipeline
    std::shared_ptr<MutationPipeline> createPipeline(const boost::filesystem::path& configPath);

private:
    /// @brief Private constructor
    MutationPipelineFactory() {}

    /// @brief Parses XML config file and returns property tree
    /// @param [in] configPath      path to config file
    /// @return initialized property tree
    boost::property_tree::ptree parseConfigXML(const boost::filesystem::path& configPath);
};

#endif