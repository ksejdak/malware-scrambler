#ifndef MUTATIONPIPELINE_H
#define MUTATIONPIPELINE_H

#include "IMutationEngine.h"
#include "PortableExecutable\PortableExecutableCommon\PEFile.h"

#include <memory>
#include <list>

class MutationPipeline
{
public:
    /// @brief Inserts mutation engine to pipeline at the end (FIFO)
    /// @param [in] engine      mutation engine
    void insert(std::shared_ptr<IMutationEngine> engine);

    /// @brief Clears mutation pipeline
    void clear();

    /// @brief Returns number of pipelined engines
    /// return number of pipelined engines
    unsigned int count();

    /// @brief Starts processing PE file with mutation engines in FIFO order
    /// @param [in] PE          PE file
    void process(std::shared_ptr<PEFile> PE);

private:
    std::list<std::shared_ptr<IMutationEngine>> m_mutationEngines;
};

#endif