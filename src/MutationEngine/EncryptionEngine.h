#ifndef ENCRYPTIONENGINE_H
#define ENCRYPTIONENGINE_H

#include "IMutationEngine.h"

#include <boost\property_tree\ptree.hpp>
#include <boost\filesystem.hpp>

class EncryptionEngine : public IMutationEngine
{
public:
    /// @brief Constructor
    /// @param [in] engineTree      property tree describing engine
    EncryptionEngine(const boost::property_tree::ptree& engineTree);

    /// @brief Virtual destructor
    virtual ~EncryptionEngine() {}

    /// @see IMutationEngine::mutate
    virtual void mutate(std::shared_ptr<PEFile> PE, std::map<std::string, std::string>& context);

private:
    boost::filesystem::path m_codeTemplatePath;
    std::string m_assembler;
    std::string m_params;
};

#endif