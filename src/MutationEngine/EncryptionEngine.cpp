#include "EncryptionEngine.h"
#include "Utils\Debug\Debug.h"

EncryptionEngine::EncryptionEngine(const boost::property_tree::ptree& engineTree)
    : IMutationEngine("EncryptionEngine")
{
    bool codeTemplateFound = false;
    for(const boost::property_tree::ptree::value_type& node : engineTree)
    {
        if(std::string(node.first.data()) != "CodeTemplate")
            continue;

        std::string codeTemplatePath = node.second.get<std::string>("<xmlattr>.path", "");
        if(codeTemplatePath == "")
            throw std::runtime_error(MODULE_NAME + " one or more attributes is empty in Resource node");

        m_codeTemplatePath = codeTemplatePath;
        if(!boost::filesystem::exists(m_codeTemplatePath))
        {
            std::stringstream errMsg;
            errMsg << MODULE_NAME + " file \"" << codeTemplatePath << "\" does not exist";
            throw std::runtime_error(errMsg.str());
        }

        codeTemplateFound = true;
        break;
    }

    if(!codeTemplateFound)
        throw std::runtime_error(MODULE_NAME + " no CodeTemplate node found in Engine node");
}

void EncryptionEngine::mutate(std::shared_ptr<PEFile> PE, std::map<std::string, std::string>& context)
{
}