#ifndef SECTIONRESIZER_H
#define SECTIONRESIZER_H

#include "IMutationEngine.h"

#include <boost\property_tree\ptree.hpp>

class SectionResizer : public IMutationEngine
{
public:
    /// @brief Constructor
    /// @param [in] engineTree      property tree describing engine
    SectionResizer(const boost::property_tree::ptree& engineTree);

    /// @brief Virtual destructor
    virtual ~SectionResizer() {}

    /// @see IMutationEngine::mutate
    virtual void mutate(std::shared_ptr<PEFile> PE, std::map<std::string, std::string>& context);

private:
    /// @brief Changes value of DWORD variable depending on sizeDelta value and sign
    /// @param [in/out] size        size to be changed
    /// @param [in] size            how much size should be changed
    void resizeDWORD(unsigned long& size, long sizeDelta);
};

#endif