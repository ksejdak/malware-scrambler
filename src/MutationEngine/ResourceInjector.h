#ifndef RESOURCEINJECTOR_H
#define RESOURCEINJECTOR_H

#include "IMutationEngine.h"
#include "Utils\XMLParser\IXMLParser.h"
#include "PortableExecutable\Resources\ResourcesStructures.h"

#include <boost\property_tree\ptree.hpp>
#include <list>

class ResourceInjector : public IMutationEngine, public IXMLParser
{
public:
    /// @brief Constructor
    /// @param [in] engineTree      property tree describing engine
    ResourceInjector(const boost::property_tree::ptree& engineTree);

    /// @brief Virtual destructor
    virtual ~ResourceInjector() {}

    /// @see IMutationEngine::mutate
    virtual void mutate(std::shared_ptr<PEFile> PE, std::map<std::string, std::string>& context);

private:
    /// @see IXMLParser::initRequiredSubnodes
    virtual std::vector<std::string>& getRequiredSubnodes();

    /// @brief Reads XML resource subtree
    /// @param [in] resourceTree   XML resource subtree
    void readResource(const boost::property_tree::ptree& resourceTree);

private:
    std::list<std::shared_ptr<NewResource>> m_resources;
};

#endif