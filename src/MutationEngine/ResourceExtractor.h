#ifndef RESOURCEEXTRACTOR_H
#define RESOURCEEXTRACTOR_H

#include "IMutationEngine.h"
#include "PortableExecutable\Resources\ResourcesStructures.h"

#include <boost\property_tree\ptree.hpp>
#include <map>

class ResourceExtractor : public IMutationEngine
{
public:
    /// @brief Constructor
    /// @param [in] engineTree      property tree describing engine
    ResourceExtractor(const boost::property_tree::ptree& engineTree);

    /// @brief Virtual destructor
    virtual ~ResourceExtractor() {}

    /// @see IMutationEngine::mutate
    virtual void mutate(std::shared_ptr<PEFile> PE, std::map<std::string, std::string>& context);

private:
	std::map<unsigned long, std::string> m_extractedResources;
};

#endif