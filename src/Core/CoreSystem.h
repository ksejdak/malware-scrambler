#ifndef CORESYSTEM_H
#define CORESYSTEM_H

#include "Utils\ArgsParser\ArgsParser.h"
#include "PortableExecutable\PortableExecutableCommon\PEFile.h"
#include "MutationEngine\MutationPipeline.h"

#include <boost\filesystem.hpp>
#include <memory>

class CoreSystem
{
public:
    /// @brief Constructor
    /// @param [in] mainOptions     parsed main options
    CoreSystem(const MainOptions& mainOptions);

    /// @brief Starts core system
    void run();

private:
    void processOneFile(const boost::filesystem::path& filePath);

    boost::filesystem::path m_inputPath;
    boost::filesystem::path m_outputPath;
    boost::filesystem::path m_configPath;

    bool m_multipleFileProcessing;
    std::shared_ptr<MutationPipeline> m_mutationPipeline;
};

#endif