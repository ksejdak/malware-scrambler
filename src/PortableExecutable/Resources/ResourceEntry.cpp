#include "ResourceEntry.h"
#include "Utils\Debug\Debug.h"
#include "PortableExecutable\PortableExecutableCommon\PEFile.h"

#include <sstream>
#include <iomanip>

#define HEX_PREVIEW     0
#define PREVIEW_SIZE    40

ResourceEntry::ResourceEntry(PESection* section, PIMAGE_RESOURCE_DIRECTORY_ENTRY entry)
    : IResourceComponent(section, entry)
{
    m_dataEntry = reinterpret_cast<PIMAGE_RESOURCE_DATA_ENTRY>(section->getData()->data() + m_entry->OffsetToData);

    m_resourceData.reset(new std::vector<uint8_t>(m_dataEntry->Size));
    uint8_t* dataPtr = section->getData()->data() + m_dataEntry->OffsetToData - m_sectionRVA;
    std::memcpy(m_resourceData->data(), dataPtr, m_resourceData->size());
}

bool ResourceEntry::isDirectory()
{
    return false;
}

void ResourceEntry::addToOffset(size_t value)
{
    m_dataEntry->OffsetToData += value;
}

std::shared_ptr<std::vector<uint8_t>> ResourceEntry::getResource()
{
    return m_resourceData;
}

void ResourceEntry::debugPrint(int indentation)
{
    std::stringstream ss;
    ss << std::string(indentation, '\t') << getComponentName() << " [preview: ";

    for(unsigned int i = 0; i < PREVIEW_SIZE; ++i)
#if HEX_PREVIEW
        ss << std::showbase << std::hex << static_cast<unsigned int>(m_resourceData->at(i)) << " ";
#else
        ss << m_resourceData->at(i);
#endif
    ss << "]";

    LOG_DEBUG(ss.str());
}