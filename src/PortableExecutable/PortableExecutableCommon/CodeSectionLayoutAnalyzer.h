#ifndef CODESECTIONLAYOUTANALYZER_H
#define CODESECTIONLAYOUTANALYZER_H

#include "PEFile.h"

#include <memory>

class CodeSectionLayoutAnalyzer
{
public:
    /// @brief Checks what is the real size of code basing on entry point and possible data directory data at the end of code section
    /// @param [in] entryPointRVA       entry point RVA
    /// @param [in] PE                  PEFile to be mutated
    /// @return real size of code
    unsigned long checkRealCodeSize(unsigned long entryPointRVA, std::shared_ptr<PEFile> PE);

    /// @brief Checks what is offset from code section to first byte of code
    /// @param [in] entryPointRVA       entry point RVA
    /// @param [in] PE                  PEFile to be mutated
    /// @return code beginning offset
    unsigned long checkCodeBeginningOffset(unsigned long entryPointRVA, std::shared_ptr<PEFile> PE);
};

#endif