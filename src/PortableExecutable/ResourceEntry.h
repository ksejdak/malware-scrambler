#ifndef RESOURCEENTRY_H
#define RESOURCEENTRY_H

#include "ResourcesStructures.h"

class ResourceEntry : public IResourceComponent
{
public:
    /// @brief Constructor
    /// @param [in] section         pointer to section
    /// @param [in] entry           resource directory entry
    ResourceEntry(PESection* section, PIMAGE_RESOURCE_DIRECTORY_ENTRY entry);

    /// @brief Constructor while adding new resource
    /// @param [in] section         pointer to section
    /// @param [in] entry           resource directory entry
    /// @param [in] dataEntry       resource data entry
    /// @param [in] resourceData    resource data
    ResourceEntry(PESection* section, PIMAGE_RESOURCE_DIRECTORY_ENTRY entry, PIMAGE_RESOURCE_DATA_ENTRY dataEntry, std::shared_ptr<std::vector<char>> resourceData);

    /// @brief Virtual destructor
    virtual ~ResourceEntry() {}

    /// @see IResourceComponent::isDirectory
	virtual bool isDirectory();

    /// @brief Returns raw resource data (ex. image, string)
    /// @return raw resource data
    std::shared_ptr<std::vector<char>> getResource();

    /// @see IResourceComponent::save
    virtual size_t save(boost::filesystem::ofstream& file, size_t saveOffset);

    /// @see IResourceComponent::debugPrint
    virtual void debugPrint(int indentation);

private:
    IMAGE_RESOURCE_DATA_ENTRY m_dataEntry;
    std::shared_ptr<std::vector<char>> m_resourceData;

    friend class ResourceIterator;
};

#endif