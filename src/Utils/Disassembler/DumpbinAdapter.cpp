#include "DumpbinAdapter.h"
#include "Utils\Debug\Debug.h"

#include <cstdlib>
#include <fstream>
#include <sstream>
#include <string>
#include <stdexcept>

static const std::string DUMPBIN_APP_NAME = "dumpbin";
static const std::string DUMPBIN_OPTIONS  = "/disasm /range:";

DumpbinAdapter::DumpbinAdapter(const boost::filesystem::path& PEFile, size_t entryPointVA)
    : m_PEFile(PEFile)
    , m_entryPointVA(entryPointVA)
{
}

void DumpbinAdapter::dump()
{
    boost::filesystem::path outputPath = m_PEFile;
    outputPath.replace_extension("lst");

    std::stringstream dumpbinCmd;
    dumpbinCmd << DUMPBIN_APP_NAME << " " << DUMPBIN_OPTIONS << std::showbase << std::hex << m_entryPointVA;

    LOG_INFO("Executing: [" + dumpbinCmd.str() + "]");
    LOG_EMPTY();
    LOG_INFO("------------------------- START OF DUMPBIN OUTPUT -----------------------------");
    if(system(dumpbinCmd.str().c_str()) != 0)
        throw std::runtime_error(MODULE_NAME + " dumping failed");
    LOG_INFO("-------------------------- END OF DUMPBIN OUTPUT ------------------------------");
    LOG_EMPTY();

    std::ifstream file(outputPath.string(), std::ios::in);
    while(!file.eof())
    {
        std::string dumpLine;
        file >> dumpLine;
        m_instructions.push_back(AssemblerInstruction(dumpLine));
    }
    file.close();
}