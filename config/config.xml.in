<?xml version="1.0"?>

<MutationPipeline>
    <Engine name="IATDeleterEngine">
        <Configuration isFirst="true" encryptionKey="0xAB" />
        <CodeProvider type="assembler" id="deleter">
            <Code path="${DEFAULT_RESOURCES_DIR}\imports_resolver_template.asm" />
            <Provider name="nasm" params="-f win32 <INPUT> -o <OUTPUT>" />
        </CodeProvider>
    </Engine>
    <Engine name="CodeRelocationEngine">
        <Configuration id="decoders" source="context" />
    </Engine>
    <Engine name="SectionResizer" />
</MutationPipeline>

<!-- POSSIBLE ENGINES

/// @brief Inserts garbage code at the beginning of code section (by replacing original content)
/// @note  GarbageCodeInjector works only with CopyEncryptionEngine. If used with EncryptionEngine it should be added as another code provider to EncryptionEngine
/// @param isFirst          true  - when first in XML tree among other engines, that use CodeRelocationEngine
///                         false - otherwise
/// @param delaySecs        delay in seconds that should be generated by garbage code
<Engine name="GarbageCodeInjector">
    <Configuration isFirst="false" delaySecs="20" />
    <CodeProvider type="compiler" id="garbage">
        <Code path="${DEFAULT_RESOURCES_DIR}\garbage_code_template.c" />
        <Provider name="g++" params="-O0 <INPUT> -o <OUTPUT>" />
    </CodeProvider>
</Engine>

/// @brief XOR encryption, decoders are applied at the end of code section
/// @param isMultiple       false - when only one decoder defined or first in XML tree
///                         true  - otherwise
/// @param encryptionKey    key that will be used to encrypt and decrypt code
<Engine name="EncryptionEngine">
    <Configuration isMultiple="false" encryptionKey="0x4B" />
    <CodeProvider type="assembler" id="decoder">
        <Code path="${DEFAULT_RESOURCES_DIR}\single_encryption_template.asm" />
        <Provider name="nasm" params="-f win32 <INPUT> -o <OUTPUT>" />
    </CodeProvider>
</Engine>

/// @brief Relocates code to the end of last section
/// @param id               name, that will be provided through context to other engines about relocated code
/// @param source           codeProvider - code location is at the beginnig of code section and size will be taken from code providers
///                         context      - code location and size will be taken from context
<Engine name="CodeRelocationEngine">
    <Configuration id="decoders" source="context" />
</Engine>

/// @brief XOR encryption, decoders are replacing some code at the beginning of code section
/// @note  This engine requires CopyEncryptionFinalizerEngine and CodeRelocationEngine
/// @param isFirst          true  - when first in XML tree among other engines, that use CodeRelocationEngine
///                         false - otherwise
/// @param encryptionKey    key that will be used to encrypt and decrypt code
<Engine name="CopyEncryptionEngine">
    <Configuration isFirst="true" encryptionKey="0x4B" />
    <CodeProvider type="assembler" id="decoder">
        <Code path="${DEFAULT_RESOURCES_DIR}\copy_encryption_template.asm" />
        <Provider name="nasm" params="-f win32 <INPUT> -o <OUTPUT>" />
    </CodeProvider>
</Engine>

/// @brief Finalizer for CopyEncryptionEngine
<Engine name="CopyEncryptionFinalizerEngine">
    <CodeProvider type="assembler" id="finalizer">
        <Code path="${DEFAULT_RESOURCES_DIR}\copy_encryption_finalizer_template.asm" />
        <Provider name="nasm" params="-f win32 <INPUT> -o <OUTPUT>" />
    </CodeProvider>
</Engine>

/// @brief Extracts resource of given type and saves in given location
/// @param path             path to save extracted resource
/// @param type             type of resource to be extracted
<Engine name="ResourceExtractor">
    <Resource path="${DEFAULT_OUTPUT_DIR}\Antygona.txt" type="666" />
</Engine>

/// @brief Updates all sizes and RVAs accross PE (currently not resizing)
<Engine name="SectionResizer" />

/// @brief Delets IAT from PE and inserts resolver, that in runtime will load all necessary libraries and resolve all required functions
/// @note  This engine requires CodeRelocationEngine
/// @param isFirst          true  - when first in XML tree among other engines, that use CodeRelocationEngine
///                         false - otherwise
/// @param encryptionKey    key that will be used to encrypt and decrypt code
<Engine name="IATDeleterEngine">
    <Configuration isFirst="true" encryptionKey="0xAB" />
    <CodeProvider type="assembler" id="deleter">
        <Code path="${DEFAULT_RESOURCES_DIR}\imports_resolver_template.asm" />
        <Provider name="nasm" params="-f win32 <INPUT> -o <OUTPUT>" />
    </CodeProvider>
</Engine>

-->